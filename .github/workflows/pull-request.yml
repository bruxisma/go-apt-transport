name: Pull Request
on:
  pull_request:
    types: [synchronize, opened, edited]
jobs:
  skip:
    name: Check Duplicate Actions
    runs-on: ubuntu-latest
    outputs:
      should-skip: ${{steps.skip-checkout.outputs.should_skip}}
    steps:
      - name: Skip Duplicate Actions (Pull Request)
        uses: fkirc/skip-duplicate-actions@9d116fa7e55f295019cfab7e3ab72b478bcf7fdd # tag=v4
        id: skip-check
  test:
    name: Test
    runs-on: ubuntu-latest
    if: needs.skip.outputs.should-skip != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.x'
          cache: true
      - name: Get Go Modules Cache location
        run: echo "::set-output name=dir::$(go env GOMODCACHE)"
        id: go-modules-cache
      - name: Get Go Build Cache Location
        run: echo "::set-output name=dir::$(go env GOCACHE)"
        id: go-build-cache
      - name: Setup Go Modules Cache
        uses: actions/cache@v3
        with:
          restore-keys: go-modules-
          path: ${{steps.go-modules-cache.outputs.dir}}
          key: go-modules-${{hashFiles('**/go.sum')}}
      - name: Setup Go Build Cache
        uses: actions/cache@v3
        with:
          restore-keys: go-build-
          path: ${{steps.go-build-cache.outputs.dir}}
          key: go-modules-${{hashFiles('**/go.mod', '**/go.sum')}}
      - name: Setup gotestfmt
        uses: haveyoudebuggedit/gotestfmt-action@v2
        with:
          token: ${{github.token}}
      - name: Run Tests
        run: >-
          go test -v ./...
          -json
          -coverprofile coverage.out
          -cover ${{github.workspace}}
          2>&1 | gotestfmt
      - name: Upload Code Coverage
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378 # tag=v3.1.0
        with:
          fail_ci_if_error: true
          directory: ${{github.workspace}}
          files: coverage.out
